name: Deploy Draft Release on Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      projects:
        description: 'Select the projects to deploy (comma-separated list or "all" for all projects)'
        required: true
        default: "all"
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["waldi", "smartregionauf", "ratingen"]

    steps:
      - uses: actions/checkout@v3

      - name: Set Projects to Deploy
        id: set-projects
        run: |
          if [[ "${{ github.event.inputs.projects }}" == "all" ]]; then
            echo "ALL_PROJECTS=waldi,smartregionauf,ratingen" >> $GITHUB_ENV
          else
            echo "ALL_PROJECTS=${{ github.event.inputs.projects }}" >> $GITHUB_ENV
          fi

      - name: Filter Projects to Deploy
        if: contains(env.ALL_PROJECTS, matrix.project)
        id: set-vars
        run: |
          if [[ "${{ matrix.project }}" == "waldi" ]]; then
            echo "HOST=${{ secrets.WALDI_HOST_NAME }}" >> $GITHUB_ENV
            echo "USERNAME=${{ secrets.WALDI_USERNAME }}" >> $GITHUB_ENV
            echo "PASSWORD=${{ secrets.WALDI_PASSWORD }}" >> $GITHUB_ENV
            echo "APPDIR=${{ secrets.WALDI_APPDIR }}/Frontend" >> $GITHUB_ENV
          elif [[ "${{ matrix.project }}" == "smartregionauf" ]]; then
            echo "HOST=${{ secrets.SMART_HOST_NAME }}" >> $GITHUB_ENV
            echo "USERNAME=${{ secrets.SMART_USERNAME }}" >> $GITHUB_ENV
            echo "PASSWORD=${{ secrets.SMART_PASSWORD }}" >> $GITHUB_ENV
            echo "APPDIR=${{ secrets.SMART_APPDIR }}/Frontend" >> $GITHUB_ENV
          elif [[ "${{ matrix.project }}" == "ratingen" ]]; then
            echo "HOST=${{ secrets.RATINGEN_HOST_NAME }}" >> $GITHUB_ENV
            echo "USERNAME=${{ secrets.RATINGEN_USERNAME }}" >> $GITHUB_ENV
            echo "PASSWORD=${{ secrets.RATINGEN_PASSWORD }}" >> $GITHUB_ENV
            echo "APPDIR=${{ secrets.RATINGEN_APPDIR }}/Frontend" >> $GITHUB_ENV
          fi

      - name: Copy files via SSH
        if: contains(env.ALL_PROJECTS, matrix.project)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD || '' }}
          key: ${{ env.SSHKEY || '' }}
          source: "*"
          target: ${{ env.APPDIR }}

      - name: SSH to Server and run commands
        if: contains(env.ALL_PROJECTS, matrix.project)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD || '' }}
          key: ${{ env.SSHKEY || '' }}
          script: |
            cd ${{ env.APPDIR }}
            npm install --production
            npm run lint .
            npm run build
            pm2 restart WEB
